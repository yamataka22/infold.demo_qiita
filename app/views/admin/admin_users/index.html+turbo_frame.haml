= turbo_frame_tag(admin_remote_modal_id) do
  = render Admin::RemoteModalComponent.new('modal_sub') do |modal|
    = modal.with_header { 'AdminUser' }
    = modal.with_body do
      .modal-body
        .mb-3
          = form_with model: Admin::CustomerSearchForm.new, url: admin_admin_users_path, method: :get,
            scope: 'search', data: { turbo_frame: 'association_search_body' } do |form|
            .row.gy-3.align-items-end
              .col-lg-6.col-xl-4
                = render Admin::FieldsetComponent.new(form, :id_eq, :text, alignment: false, 
                  label: Admin::AdminUser.human_attribute_name(:id), placeholder: '=')
              .col-lg-6.col-xl-4
                = hidden_field_tag :name_field, params[:name_field]
                = form.submit t('infold.operation.search'), class: 'btn btn-primary'
        = turbo_frame_tag 'association_search_body' do
          - if @admin_users.blank?
            .alert= t('infold.no_data')
          - else
            .table_wrapper.table-responsive.bg-white.border.mb-3
              %table.table.table-striped.table-hover
                %thead
                  %tr
                    %th= Admin::AdminUser.human_attribute_name(:email)
                    %th= Admin::AdminUser.human_attribute_name(:password)
                    %th
                %tbody
                  - @admin_users.each do |admin_user|
                    %tr
                      %td
                        = admin_user.email
                      %td
                        = admin_user.password
                      %td.icon_cell
                        %a{ href: '#', data: { action: "relation-search#select remote-modal#close",
                          id: admin_user.id, name: admin_user.read_attribute(params[:name_field]) } }
                          %i.bi.bi-check2-square.h3
            = paginate(@admin_users, views_prefix: "admin")